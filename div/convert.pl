#!/bin/perl
#


use Data::Dumper::Simple;



open F,shift or die;


our %typ; 
our %ft;
our @typlist;
our @t2list;
our @ext;


our @file;
my $ct = 0;
my $ct2 = 0;
push @t2list, "\"octet-stream\""; # save default for unknown

open OUT, ">mimetypes.h";

print OUT "// Generated by convert.pl\n\n",
	"#define MIMETYPE_ENUM enum { \\\nunkown=0";

foreach my $l (<F>){
	next	if ( $l =~ /vnd\./ || $l =~ /^\#/ || $l =~ /cooltalk/ ); # cooltalk contains a - 
	#print $l;
	$l =~ /(^\S*)\/(\S*)\s*(.*)/;
	#print "typ $1 ft $2    ext $3\n";
	my $t = $1;
	my $typnum;
	if ( !exists( $typ{$t} ) ){
		$typ{$t} = $ct;
		$typnum = $ct;
		push @typlist, "\"$t\"";
		$ct++;
	} else {
		$typnum = $typ{$t};
	}
	push @t2list, "\"$2\"";
	my $t2 = $2;
	$ct2 ++;

	#	print "typnum: $typnum / $ct2\n";

	if ( ($ct2&0xff00) ){
		$typnum += 0x10; # set bit 5.
	}
	#print "$t2\n";
	$t2 =~ s/\W/_/g;

	print OUT ", $t"."_"."$t2 = ".(($typnum<<8)|($ct2&0xff) );

	foreach my $x ( split(" ",$3 ) ){
		my $n;
		$n = sprintf ( "\\%03o\\%03o", $typnum, ($ct2&0xff) );
		
		##my $n =  sprintf ( "\\000\\%03o\\%03o\\%03o", $typnum, ( ($ct2&0xff00)>>8), ($ct2&0xff) );
		push @ext, "$x$n";
		#print "\"$x$n\"\n";
	}


}

print OUT " }\n\n";

print "ct: $ct\n";
print "cft: $cft\n";


our @sorted = sort @ext;

#print Dumper(@sorted);


print "char *mimetyplist[] = { \n\t", join (",\n\t",@typlist ), " };\n"; 
print OUT "const char *mimetyplist[] = { \n\t", join (",\n\t",@typlist ), " };\n"; 

#todo: store index to string, and use 0 as stopbyte.
# (or bit8(??))

print "char *mimetyplist2[] = { \n\t", join (",",@t2list ), " };\n"; 
print OUT "const char *mimetyplist2[] = { \n\t", join (",",@t2list ), " };\n"; 

#print "char *mimetyplist[] = { \n\t", join (",\n\t",@typlist ), " };\n"; 

print OUT "\nconst char* mimetypext = \n\"";
print OUT join("", @sorted ), "\";\n\n";




close(OUT);




